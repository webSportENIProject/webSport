@model WUI.Models.RaceModel

@{
    ViewBag.Title = "Details";
}

@section css {
    @Styles.Render("~/Content/Race/css")
}

@section scriptsHeader{
    <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=geometry,places&ext=.js&key=AIzaSyCmQ54LQucf9hRGkuQ1kGJM9EIFMr5vtT8"></script>

}

<h2>Details de la course @Html.DisplayFor(model => model.Title)</h2>

<h3>Qui aura lieu du @Html.DisplayFor(model => model.DateStart) au @Html.DisplayFor(model => model.DateEnd)</h3>

<p>@Html.DisplayFor(model => model.Description)</p>

<div id="mapid"></div>
<br/>
<div>
    <table class="table">
        <thead>
            <tr>
                <th>Partie</th>
                <th>Adresse de départ</th>
                <th>Adresse d'arrivée</th>
                <th>Nombre de kilomètres</th>
            </tr>
        </thead>
        <tbody id="directions_panel"></tbody>
    </table>
</div>

@Html.ActionLink("Retour à la liste des courses", "Index")


@section scripts {
    <script type="text/javascript">
        var geocoder;
        var map;
        var directionsDisplay;
        var directionsService = new google.maps.DirectionsService();
        var KmOrMiles = "@Model.KmOrMiles";
        if( KmOrMiles == "Miles"){
            var unitSystemCompte = google.maps.UnitSystem.IMPERIAL;
        }else{
            var unitSystemCompte = google.maps.UnitSystem.METRIC;
        }

        $.ajax({
            url: "@Url.Action("Points", "Race", new {id= @Model.Id })",
            dataType: "json",
            success: populateTable
        });

        var points;

        function populateTable(result) {
            console.log(result);
            points = result;
            initialize();
        }

        function initialize() {
            directionsDisplay = new google.maps.DirectionsRenderer({ suppressMarkers: true });

            if (jQuery('#mapid').length > 0 && points.length != 0) {

                var locations = points;

                map = new google.maps.Map(document.getElementById('mapid'), {
                    center: new google.maps.LatLng(47.21806, -1.55278),
                    zoom: 13,
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                });
                directionsDisplay.setMap(map);

                var infowindow = new google.maps.InfoWindow();
                var flightPlanCoordinates = [];
                var bounds = new google.maps.LatLngBounds();

                for (i = 0; i < locations.length; i++) {
                    marker = new google.maps.Marker({
                        position: new google.maps.LatLng(locations[i]["Latitude"], locations[i]["Longitude"]),
                        map: map,
                        title: locations[i]["Ordre"].toString(),
                        label: locations[i]["Ordre"].toString(),
                    });
                    flightPlanCoordinates.push(marker.getPosition());
                    bounds.extend(marker.position);

                    google.maps.event.addListener(marker, 'click', (function (marker, i) {
                        return function () {
                            infowindow.setContent("Titre : " + locations[i]["Titre"] + "<br/>" + "Catégorie : " + locations[i]["LibelleTypePoint"]);
                            infowindow.open(map, marker);
                        }
                    })(marker, i));
                }

                map.fitBounds(bounds);

                // directions service
                var start = flightPlanCoordinates[0];
                var end = flightPlanCoordinates[flightPlanCoordinates.length - 1];
                var waypts = [];
                for (var i = 1; i < flightPlanCoordinates.length - 1; i++) {
                    waypts.push({
                        location: flightPlanCoordinates[i],
                        stopover: true
                    });
                }
                calcRoute(start, end, waypts);
            }
        }


        function calcRoute(start, end, waypts) {
            var request = {
                origin: start,
                destination: end,
                waypoints: waypts,
                travelMode: google.maps.TravelMode.WALKING,
                unitSystem: unitSystemCompte
            };
            directionsService.route(request, function (response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    console.log(response);
                    directionsDisplay.setDirections(response);
                    var route = response.routes[0];
                    var summaryPanel = document.getElementById('directions_panel');
                    var totalDistances = 0;
                    
                    // For each route, display summary information.
                    for (var i = 0; i < route.legs.length; i++) {
                        var routeSegment = i + 1;
                        summaryPanel.innerHTML += '<tr>'
                                                + '<td>' + routeSegment + '</td>'
                                                + '<td>' + route.legs[i].start_address + '</td>'
                                                + '<td>' + route.legs[i].end_address + '</td>'
                                                + '<td>' + route.legs[i].distance.text + '</td>'
                                                + '</tr>';

                        //Distance totale du parcours : divisé par 1000 -> en km
                        totalDistances += route.legs[i].distance.value / 1000;
                    }
                    summaryPanel.innerHTML += '<tr>'
                                                + '<td></td>'
                                                + '<td></td>'
                                                + '<th> Distance Totale </th>'
                                                + '<td>' + totalDistances + ' km </td>'
                                                + '</tr>';
                }
            });
        }


        /* Ancien code */

        /* function initialize() {
           var map = new google.maps.Map(
             document.getElementById("mapid"), {
                 center: new google.maps.LatLng(47.21806, -1.55278),
                 zoom: 13,
                 mapTypeId: google.maps.MapTypeId.ROADMAP
             });

           //Dessin des markers
           for (i = 0; i < points.length; i++) {
               marker = new google.maps.Marker({
                   position: new google.maps.LatLng(points[i]["Latitude"], points[i]["Longitude"]),
                   map: map,
                   title: points[i]["Ordre"].toString(),
                   label: points[i]["Ordre"].toString(),
               });

               var content = "Titre : " + points[i]["Titre"] + "<br/>" + "Catégorie : " + points[i]["LibelleTypePoint"];

               var infowindow = new google.maps.InfoWindow();

               google.maps.event.addListener(marker, 'click', (function (marker, content, infowindow) {
                   return function () {
                       infowindow.setContent(content);
                       infowindow.open(map, marker);
                   };
               })(marker, content, infowindow));
           }

           //Dessin de la route
           for (var t = 0;
             (t + 1) < points.length; t++) {

               //Intialize the Direction Service
               var service = new google.maps.DirectionsService();
               var directionsDisplay = new google.maps.DirectionsRenderer();

               var bounds = new google.maps.LatLngBounds();
               if ((t + 1) < points.length) {
                   var src = new google.maps.LatLng(points[t]["Latitude"], points[t]["Longitude"]);
                   var des = new google.maps.LatLng(points[t + 1]["Latitude"], points[t + 1]["Longitude"]);
                   console.log("src=" + src.toUrlValue() + " dest=" + des.toUrlValue());
                   service.route({
                       origin: src,
                       destination: des,
                       travelMode: google.maps.DirectionsTravelMode.WALKING
                   }, function (result, status) {
                       console.log(result);
                       if (status == google.maps.DirectionsStatus.OK) {

                           var path = new google.maps.MVCArray();
                           //Set the Path Stroke Color

                           var poly = new google.maps.Polyline({
                               map: map,
                               strokeColor: '#0288d1'
                           });
                           poly.setPath(path);
                           for (var k = 0, len = result.routes[0].overview_path.length; k < len; k++) {
                               path.push(result.routes[0].overview_path[k]);
                               bounds.extend(result.routes[0].overview_path[k]);
                               map.fitBounds(bounds);
                           }
                       } else {
                           console.log("Directions Service failed:" + status);
                       }
                   });
               }
           }
       }*/



    </script>

}