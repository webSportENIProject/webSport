@model WUI.Models.PointModel

@{
    ViewBag.Title = "Create";
}

@section scriptsHeader{
    <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=geometry,places&ext=.js&key=AIzaSyCmQ54LQucf9hRGkuQ1kGJM9EIFMr5vtT8"></script>

}

<h2>Création d'un point pour une course</h2>

@using (Html.BeginForm("Create", "Point", FormMethod.Post))
{
    // Génère un token dans le cookie d'authentification afin de contrer les
    // attaques de type Cross-site Request forgery
    @Html.AntiForgeryToken();
    
    // Grâce à la propriété "true", on affiche uniquement les erreurs
    // n'étant pas rattachées à la propriété du model (ici PointModel)
    @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Titre)
        </div>
        <div class="form-group">
            @Html.TextBoxFor(model => model.Titre, new { @class="form-control", size = "30" })
            @Html.ValidationMessageFor(model => model.Titre)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ordre)
        </div>
        <div class="form-group">
            @Html.TextBoxFor(model => model.Ordre, new { @class="form-control", type = "int", size = "30" })
            @Html.ValidationMessageFor(model => model.Ordre)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Longitude)
        </div>
        <div class="form-group">
            @Html.TextBoxFor(model => model.Longitude, new { @class="form-control", type="int", size = "30" })
            @Html.ValidationMessageFor(model => model.Longitude)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Latitude)
        </div>
        <div class="form-group">
            @Html.TextBoxFor(model => model.Latitude, new { @class="form-control", type="int", size = "30" })
            @Html.ValidationMessageFor(model => model.Latitude)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LibelleCourse)
        </div>
        <div class="form-group">
           @Html.DropDownListFor(model => model.IdCourse, new SelectList(Model.ListCourseOptions,
                               "Id", "Title"))
           @Html.ValidationMessageFor(model => model.IdCourse)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LibelleTypePoint)
        </div>
        <div class="form-group">
            @Html.DropDownListFor(model => model.IdTypePoint, new SelectList(Model.ListTypePointOptions,
                               "Id", "Libelle"))
            @Html.ValidationMessageFor(model => model.IdTypePoint)
        </div>

       <button type="submit" value="Créer le point" class="btn btn-default">Créer le point</button>
}


<div>
    @Html.ActionLink("Retour à la liste", "Index")
</div>

<div id="mapid"></div>

@section scripts {
   

    <script type="text/javascript">

        function initMap() {
            //Initialisation d'un marker par défaut
            var myOptions = {
                zoom: 6,
                center: new google.maps.LatLng(47.21564760150686,- 1.5509283542633057)
            },
              map = new google.maps.Map(document.getElementById('mapid'), myOptions),
              marker = new google.maps.Marker({
                  map: map,
              }),
              infowindow = new google.maps.InfoWindow;

            //Modification du placement du marker avec clic sur la MAP
            map.addListener('click', function (e) {
                map.setCenter(e.latLng);
                marker.setPosition(e.latLng);
                infowindow.setContent("Latitude: " + e.latLng.lat() +
                  "<br>" + "Longitude: " + e.latLng.lng());

                var latitude = document.getElementById('Latitude');
                var longitude = document.getElementById('Longitude');

                latitude.setAttribute("value", latLng.lat().toString().replace(".", ","));
                longitude.setAttribute("value", e.latLng.lng().toString().replace(".", ","));

                infowindow.open(map, marker);
            });
        }
        google.maps.event.addDomListener(window, "load", initMap);
    </script>

}
